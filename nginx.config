# Configuration Nginx pour Server Disk Monitor
# À placer dans le même répertoire que docker-compose.yml

events {
    worker_connections 1024;
}

http {
    # Configuration de base
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    
    # Logs
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
    
    # Configuration serveur upstream
    upstream disk_monitor_backend {
        server disk-monitor:5000;
    }
    
    # Configuration du serveur principal
    server {
        listen 80;
        server_name disk-monitor.local _;
        
        # Configuration générale
        client_max_body_size 10M;
        
        # Headers de sécurité
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
        
        # Proxy vers l'application Flask
        location / {
            proxy_pass http://disk_monitor_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
            
            # Timeouts
            proxy_connect_timeout       60s;
            proxy_send_timeout          60s;
            proxy_read_timeout          60s;
        }
        
        # Configuration spéciale pour Socket.IO
        location /socket.io/ {
            proxy_pass http://disk_monitor_backend;
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts pour WebSocket
            proxy_read_timeout 86400;
        }
        
        # API endpoints avec cache désactivé
        location /api/ {
            proxy_pass http://disk_monitor_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Pas de cache pour les API
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }
        
        # Gestion des erreurs
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
        
        # Page de santé pour le load balancer
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
    
    # Configuration HTTPS (optionnelle)
    # Décommentez si vous avez des certificats SSL
    #
    # server {
    #     listen 443 ssl;
    #     server_name disk-monitor.local;
    #     
    #     ssl_certificate /etc/ssl/certs/disk-monitor.crt;
    #     ssl_certificate_key /etc/ssl/private/disk-monitor.key;
    #     
    #     # Configuration SSL moderne
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    #     ssl_prefer_server_ciphers off;
    #     
    #     # Même configuration que HTTP
    #     location / {
    #         proxy_pass http://disk_monitor_backend;
    #         # ... reste de la config identique
    #     }
    # }
    
    # Redirection HTTP vers HTTPS (optionnelle)
    # server {
    #     listen 80;
    #     server_name disk-monitor.local;
    #     return 301 https://$server_name$request_uri;
    # }
}
# Template Docker Compose pour déploiement Portainer
# Utilise les images depuis GitHub Container Registry

version: '3.8'

services:
  disk-monitor:
    image: ${IMAGE_NAME:-ghcr.io/votre-username/server-disk-monitor}:${IMAGE_TAG:-latest}
    container_name: server-disk-monitor-web
    ports:
      - "${MONITOR_PORT:-5000}:5000"
    volumes:
      # Persistence des données
      - disk_monitor_config:/app/data
      # Optionnel: clés SSH
      - type: bind
        source: ${SSH_KEYS_PATH:-./ssh_keys}
        target: /root/.ssh
        read_only: true
        bind:
          create_host_path: true
    environment:
      - FLASK_ENV=production
      - TZ=${TIMEZONE:-Europe/Paris}
      - REFRESH_INTERVAL=${REFRESH_INTERVAL:-30}
    restart: unless-stopped
    networks:
      - monitoring
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/status"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      # Portainer
      - "portainer.stack.name=server-disk-monitor"
      - "portainer.category=Monitoring"
      
      # Traefik (si utilisé)
      - "traefik.enable=${TRAEFIK_ENABLE:-false}"
      - "traefik.http.routers.disk-monitor.rule=Host(`${DOMAIN:-disk-monitor.local}`)"
      - "traefik.http.routers.disk-monitor.entrypoints=web"
      - "traefik.http.services.disk-monitor.loadbalancer.server.port=5000"
      
      # Métadonnées
      - "org.opencontainers.image.title=Server Disk Monitor"
      - "org.opencontainers.image.description=Dashboard de surveillance des disques serveurs"
      - "org.opencontainers.image.vendor=Open Source"
      - "org.opencontainers.image.source=https://github.com/votre-username/server-disk-monitor"

  # Service Nginx optionnel
  nginx-proxy:
    image: nginx:alpine
    container_name: disk-monitor-proxy
    ports:
      - "${PROXY_PORT:-80}:80"
      - "${PROXY_SSL_PORT:-443}:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ${SSL_CERT_PATH:-./ssl}:/etc/ssl/certs:ro
    depends_on:
      - disk-monitor
    networks:
      - monitoring
    profiles:
      - proxy
    labels:
      - "portainer.stack.name=server-disk-monitor"

networks:
  monitoring:
    driver: bridge
    labels:
      - "portainer.stack.name=server-disk-monitor"

volumes:
  disk_monitor_config:
    driver: local
    labels:
      - "portainer.stack.name=server-disk-monitor"